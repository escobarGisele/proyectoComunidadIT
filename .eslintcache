[{"C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\index.js":"1","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\App.js":"2","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\reportWebVitals.js":"3","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\Footer.js":"4","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\Menu.js":"5","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\firebase.js":"6","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\Navbar.js":"7","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\CarruselBox.js":"8","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\HomeProductos.js":"9","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\ProductosNavidad.js":"10","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\Products.js":"11","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\Cart.js":"12","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\DialogoForm.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":700,"mtime":1611024977446,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":266,"mtime":1608464006804,"results":"18","hashOfConfig":"15"},{"size":1014,"mtime":1611024402196,"results":"19","hashOfConfig":"15"},{"size":657,"mtime":1611024952616,"results":"20","hashOfConfig":"15"},{"size":2295,"mtime":1611040110656,"results":"21","hashOfConfig":"15"},{"size":3944,"mtime":1611023494475,"results":"22","hashOfConfig":"15"},{"size":4918,"mtime":1611048330571,"results":"23","hashOfConfig":"15"},{"size":7070,"mtime":1611040418808,"results":"24","hashOfConfig":"15"},{"size":8071,"mtime":1611040355403,"results":"25","hashOfConfig":"15"},{"size":8150,"mtime":1611047729284,"results":"26","hashOfConfig":"15"},{"size":7707,"mtime":1611047607914,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"wh9deu",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},"C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\index.js",[],["63","64"],"C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\App.js",[],"C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\reportWebVitals.js",[],"C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\Footer.js",[],"C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\Menu.js",["65"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from './Footer';\r\nimport '../App.css';\r\n\r\nconst Menu = () => {\r\n\r\n    return (\r\n        <div class=\"flex-container\">\r\n\r\n            <div class=\"flex-item-left\"><h3>Bienvenidos a Bakerysunny</h3>\r\n\r\n            </div>\r\n\r\n            <div class=\"flex-item-right\">\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"center\">\r\n\r\n                        <p className=\"pSarasa\" >Soy Sol Lencina, dueña de bakerysunny, realizo pasteleria artesanal con mucho amor y dedicación.</p>\r\n                    </div>\r\n                    <p className=\"prod\">Te invito a ver </p>\r\n                    <Link to=\"/productos\">\r\n\r\n                        <span className=\"text1\"> mis productos </span>\r\n\r\n                    </Link>\r\n                </div>\r\n\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n\r\n","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\firebase.js",["66"],"import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBTTAM3Vg3toaCNVPam15GKQig-PeEAkXA\",\r\n    authDomain: \"basededatos-829c8.firebaseapp.com\",\r\n    projectId: \"basededatos-829c8\",\r\n    storageBucket: \"basededatos-829c8.appspot.com\",\r\n    messagingSenderId: \"568631965612\",\r\n    appId: \"1:568631965612:web:0441efb909d92282a36c09\",\r\n    measurementId: \"G-YJNKVTSVZ0\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\nexport {db, storage}\r\nexport default { firebaseConfig};\r\n","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\Navbar.js",["67","68","69"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Link} from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport logo from '../imagenes/logo.jpg';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display:'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    \r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar() {\r\n  const classes = useStyles();\r\n  \r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n        <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleClick}\r\n          >\r\n            \r\n          <Avatar alt=\"\" src={logo} className={classes.large}/>\r\n          </IconButton>\r\n                      \r\n          <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}><Link to=\"/\">Inicio</Link></MenuItem>\r\n        <MenuItem onClick={handleClose}><Link to=\"/contacto\">Contacto</Link></MenuItem>\r\n        <MenuItem onClick={handleClose}><Link to=\"/sobrenosotros\">Nosotros</Link></MenuItem>\r\n      </Menu>\r\n          <Typography className={classes.title} variant=\"h4\" noWrap>\r\n           Bakerysunny\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n    \r\n  );\r\n}\r\n","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\CarruselBox.js",["70"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport box from '../imagenes/Box/box.png';\r\nimport pascuas from '../imagenes/pascuas.png'\r\nimport miniTorta from '../imagenes/miniTorta.jpg';\r\nimport paletas from '../imagenes/paletas.png';\r\nimport Navidad from '../imagenes/Navidad.png';\r\nimport rellenos from '../imagenes/rellenos.png';\r\nimport {Link} from \"react-router-dom\";\r\n// import Modal from './Modal'\r\n// import Footer from './Footer';\r\n\r\nconst images = [\r\n  {\r\n    url: `${box}`,\r\n    //title: 'Box',\r\n    width: '30%',\r\n    link:'/confirmarCompra'\r\n  },\r\n  {\r\n    url: `${pascuas}`,\r\n    //title: 'Pascuas',\r\n    width: '40%',\r\n    link:'/confirmarCompra'\r\n  },\r\n  {\r\n    url: `${miniTorta}`,\r\n   // title: 'Mini Tortas',\r\n    width: '30%',\r\n    link:'/confirmarCompra'\r\n  },\r\n  {\r\n    url: `${Navidad}`,\r\n   // title: 'Navidad',\r\n    width: '30%',\r\n    link:'/confirmarCompra'\r\n  },\r\n  {\r\n    url:`${paletas}`,\r\n    //title: 'Paletas',\r\n    width: '40%',\r\n    link:'/confirmarCompra'\r\n  },\r\n  {\r\n    url: `${rellenos}`,\r\n    //title: 'Corazón relleno',\r\n    width: '30%',\r\n    link:'/confirmarCompra'\r\n  },\r\n  \r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    minWidth: 300,\r\n    width: '100%',\r\n    color:'red'\r\n  },\r\n  image: {\r\n    position: 'relative',\r\n    height: 260,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100% !important', // Overrides inline-style\r\n      height: 100,\r\n    },\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      },\r\n      '& $imageTitle': {\r\n        border: '4px solid currentColor',\r\n      },\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n  },\r\n  imageBackdrop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  imageTitle: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n}));\r\n\r\nexport default function ButtonBases() {\r\n  const classes = useStyles();\r\n  \r\n\r\n\r\n  return (\r\n    \r\n    <div class=\"flex-container2\" >\r\n      <div class=\"center\">  <span className=\"text1\">Mis Productos</span></div>\r\n      <h4>Podes ver algunos de mis de mis trabajos e ir a la tienda presionando sobre cualquier foto</h4>\r\n    <div className={classes.root}>\r\n      {images.map((image) => (\r\n        <ButtonBase \r\n          focusRipple\r\n          key={image.title}\r\n          className={classes.image}\r\n          focusVisibleClassName={classes.focusVisible}\r\n          style={{\r\n            width: image.width,\r\n          }}\r\n        >\r\n           <Link to={image.link}> \r\n        \r\n          <span\r\n            className={classes.imageSrc}\r\n            style={{\r\n              backgroundImage: `url(${image.url})`,\r\n            }}\r\n          />\r\n         <span className={classes.imageButton}></span>\r\n        \r\n          </Link>\r\n        </ButtonBase>\r\n       \r\n      ))}\r\n        </div>\r\n       </div>\r\n  \r\n  );\r\n}","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\HomeProductos.js",["71","72","73","74"],"C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\ProductosNavidad.js",["75","76"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport { Button } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst HOME_GARDEN = 'home and garden';\r\nconst UTILITY = 'utility';\r\nconst useStyles = makeStyles((theme) => ({\r\n  productos: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 1fr',\r\n  },\r\n  producto: {\r\n    padding: '40px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    marginLeft: '3.5rem',\r\n    maxWidth: 400,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  agregar: {\r\n    marginRight: '1rem',\r\n    backgroundColor: '#FFD900',\r\n    '&:hover': {\r\n      backgroundColor: '#D8B800',\r\n    }\r\n  },\r\n  verMas: {\r\n    color: 'whiteSmoke',\r\n    backgroundColor: '#EB5D2F',\r\n    '&:hover': {\r\n      backgroundColor: '#C4380A',\r\n    }\r\n  },\r\n  botones: {\r\n    display: 'flex',\r\n  },\r\n  h1:{\r\n    background:'#f4f5db'\r\n  }\r\n}))\r\n\r\n\r\n\r\nexport default function ProductosNavidad({ setCart, cart }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [products] = useState([\r\n    {\r\n        category: UTILITY,\r\n        name: 'Navidad',\r\n        \r\n        cost: 180,\r\n        descripcion: 'Pa',\r\n        image: 'https://firebasestorage.googleapis.com/v0/b/bakerysunny-4b7d3.appspot.com/o/Navidad%2FNavidad3.png?alt=media&token=fe23464f-3f3e-4e3b-bb1a-73bab4fe6ae4',\r\n      },\r\n      {\r\n        category: HOME_GARDEN,\r\n        name: 'Navidad2',\r\n        descripcion: 'Doble carne, bacon, cheddar y cebolla',\r\n        cost: 170,\r\n        image: 'https://firebasestorage.googleapis.com/v0/b/bakerysunny-4b7d3.appspot.com/o/Navidad%2FNavidad2.png?alt=media&token=c6197554-da25-4916-bd83-d2251a539b70',\r\n      },\r\n      {\r\n        category: HOME_GARDEN,\r\n        name: 'Navidad3',\r\n        descripcion: 'Doble carne, cheddar, tomate, y pepino',\r\n        cost: 150,\r\n        image: 'https://firebasestorage.googleapis.com/v0/b/bakerysunny-4b7d3.appspot.com/o/Navidad%2FNavidad1.png?alt=media&token=7cb1571e-3204-4893-9b70-331c408e7e34',\r\n      },\r\n      \r\n      {\r\n        category: UTILITY,\r\n        name: 'Navidad 4',\r\n        descripcion: 'Doble carne, cheddar, tomate, y pepino',\r\n        cost: 150,\r\n        image: 'https://firebasestorage.googleapis.com/v0/b/bakerysunny-4b7d3.appspot.com/o/Navidad%2FNavidad.png?alt=media&token=b9ed787b-c104-4b8e-b97f-1d886ce86c4f',\r\n      },\r\n      \r\n  ]);\r\n\r\n  const addToCart = (product) => {\r\n    let newCart = [...cart];\r\n    let itemInCart = newCart.find(\r\n      (item) => product.name === item.name\r\n    );\r\n    if (itemInCart) {\r\n      itemInCart.quantity++;\r\n    } else {\r\n      itemInCart = {\r\n        ...product,\r\n        quantity: 1,\r\n      };\r\n      newCart.push(itemInCart);\r\n    }\r\n    setCart(newCart);\r\n  };\r\n\r\n  const [category, setCategory] = useState(HOME_GARDEN);\r\n\r\n  const getProductsInCategory = () => {\r\n    return products.filter(\r\n      (product) => product.category === category\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div class=\"flex-container\">\r\n      <h1 className={classes.h1}>Navidad</h1>\r\n      \r\n        <div className={classes.productos}>\r\n        \r\n       {products.map((producto, index) => (\r\n        <div className={classes.producto} key={index}>\r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={2}>\r\n            <Grid item>\r\n              <ButtonBase className={classes.image}>\r\n              <img \r\n                className= {classes.img} \r\n                alt= {producto.name} \r\n                src= {producto.image} \r\n              />\r\n              </ButtonBase>\r\n            </Grid>\r\n            <Grid item xs={12} sm container>\r\n              <Grid item xs container direction=\"column\" spacing={2}>\r\n                <Grid item xs>\r\n                  <Typography gutterBottom variant=\"subtitle1\">\r\n                    {producto.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    {producto.descripcion}\r\n                  </Typography>\r\n                  \r\n                </Grid>\r\n                <Grid item  className={classes.botones}>\r\n                  <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                  <Button \r\n                    onClick={() => addToCart(producto)}\r\n                    className={classes.agregar} \r\n                    variant=\"outlined\"\r\n                    >\r\n                    Agregar\r\n                  </Button>\r\n                  </Typography>\r\n\r\n                  <Button \r\n                    onClick={handleClickOpen}\r\n                    className={classes.verMas}\r\n                    variant=\"outlined\"  \r\n                  >\r\n                    Ver Foto\r\n                  </Button>\r\n                  <Dialog\r\n                    fullScreen={fullScreen}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"responsive-dialog-title\"\r\n                  >\r\n                    <DialogTitle id=\"responsive-dialog-title\">{\"Foto\"}</DialogTitle>\r\n                    <DialogContent>\r\n                      <DialogContentText>\r\n                      <Typography gutterBottom variant=\"subtitle1\">\r\n                        {producto.nombre}\r\n                      </Typography>\r\n                      {/* <img \r\n                        className= {classes.img} \r\n                        alt= {producto.name} \r\n                        src= {producto.img} \r\n                      /> */}\r\n                      </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Cerrar\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\">${producto.cost}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        </div> \r\n      ))}\r\n      </div>\r\n      \r\n      </div>\r\n  );\r\n}","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\Products.js",["77","78"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport { Button } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nconst useStyles = makeStyles((theme) => ({\r\n  productos: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 1fr',\r\n    display:'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  producto: {\r\n    padding: '40px',\r\n    flexWrap: 'wrap',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    marginLeft: '3.5rem',\r\n    maxWidth: 400,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n    display:'block',\r\n    margin:'block',\r\n    backgroundColor: 'white',\r\n    '&:hover': {\r\n      backgroundColor: 'white',\r\n    }\r\n\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n\r\n  },\r\n  agregar: {\r\n    marginRight: '1rem',\r\n    backgroundColor: '#FFD900',\r\n    '&:hover': {\r\n      backgroundColor: '#D8B800',\r\n    }\r\n  },\r\n  verMas: {\r\n    color: 'whiteSmoke',\r\n    backgroundColor: '#EB5D2F',\r\n    '&:hover': {\r\n      backgroundColor: '#C4380A',\r\n    }\r\n  },\r\n  botones: {\r\n    display: 'flex',\r\n  },\r\n  h1:{\r\n    background:'#f4f5db'\r\n  }\r\n}))\r\n\r\n\r\nexport default function Products({ setCart, cart }) {\r\n  const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n  const [products] = useState([\r\n    {\r\n      name: 'Box numero 1',\r\n      cost: 180,\r\n      descripcion: 'Paletas bañadas con relleno de helado sabor americana',\r\n      image: 'https://firebasestorage.googleapis.com/v0/b/bakerysunny-4b7d3.appspot.com/o/miniTartaFrutilla.jpg?alt=media&token=89adea20-1ab6-4d09-baed-3ad4c350ae79',\r\n    },\r\n  \r\n    {\r\n        name: 'Box numero 1',\r\n        cost: 180,\r\n        descripcion: 'Paletas bañadas con relleno de helado sabor americana',\r\n        image: 'https://firebasestorage.googleapis.com/v0/b/bakerysunny-4b7d3.appspot.com/o/Desayuno%2Fbox.png?alt=media&token=27c09eee-5c95-4657-84ec-d82cb4627aca',\r\n      },\r\n      {\r\n        \r\n        name: 'Box numero 2',\r\n        descripcion: 'Doble carne, bacon, cheddar y cebolla',\r\n        cost: 170,\r\n        image: 'https://firebasestorage.googleapis.com/v0/b/bakerysunny-4b7d3.appspot.com/o/Desayuno%2Fbox1.png?alt=media&token=a5fbd34b-d4e8-4664-83b3-c7a6b63db3ab',\r\n      },\r\n      {\r\n        name: 'Box numero 1',\r\n        cost: 180,\r\n        descripcion: 'Paletas bañadas con relleno de helado sabor americana',\r\n        image: 'https://firebasestorage.googleapis.com/v0/b/bakerysunny-4b7d3.appspot.com/o/Desayuno%2Fbox.png?alt=media&token=27c09eee-5c95-4657-84ec-d82cb4627aca',\r\n      },\r\n      {\r\n        \r\n        name: 'Box numero 2',\r\n        descripcion: 'Doble carne, bacon, cheddar y cebolla',\r\n        cost: 170,\r\n        image: 'https://firebasestorage.googleapis.com/v0/b/bakerysunny-4b7d3.appspot.com/o/Desayuno%2Fbox1.png?alt=media&token=a5fbd34b-d4e8-4664-83b3-c7a6b63db3ab',\r\n      },\r\n    \r\n      {\r\n        \r\n        name: 'Box numero 3',\r\n        descripcion: 'Doble carne, cheddar, tomate, y pepino',\r\n        cost: 150,\r\n        image: 'https://firebasestorage.googleapis.com/v0/b/bakerysunny-4b7d3.appspot.com/o/Desayuno%2Fdesayuno.png?alt=media&token=dcdd0aa7-7d6e-489f-ae9e-413dbb442bd3',\r\n      },\r\n      \r\n      // {\r\n        \r\n      //   name: 'Box numero 4',\r\n      //   descripcion: 'Doble carne, cheddar, tomate, y pepino',\r\n      //   cost: 150,\r\n      //   image: 'https://firebasestorage.googleapis.com/v0/b/bakerysunny-4b7d3.appspot.com/o/Desayuno%2Fdesayuno2.png?alt=media&token=b1e373b0-cc0e-4d73-b143-1652c15e4d32',\r\n      // },\r\n      \r\n  ]);\r\n\r\n  const addToCart = (product) => {\r\n    let newCart = [...cart];\r\n    let itemInCart = newCart.find(\r\n      (item) => product.name === item.name\r\n    );\r\n    if (itemInCart) {\r\n      itemInCart.quantity++;\r\n    } else {\r\n      itemInCart = {\r\n        ...product,\r\n        quantity: 1,\r\n      };\r\n      newCart.push(itemInCart);\r\n    }\r\n    setCart(newCart);\r\n  };\r\n\r\n\r\n  return (\r\n    <div class=\"flex-container\">\r\n     \r\n     <h1 className={classes.h1}>Box de desayuno/merienda</h1>\r\n        <div className={classes.productos}>\r\n        \r\n       {products.map((producto, index) => (\r\n        <div className={classes.producto} key={index}>\r\n            \r\n      \r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={2}>\r\n            <Grid item>\r\n              <ButtonBase className={classes.image}>\r\n              <img \r\n                className= {classes.img} \r\n                alt= {producto.name} \r\n                src= {producto.image} \r\n              />\r\n              </ButtonBase>\r\n            </Grid>\r\n            <Grid item xs={12} sm container>\r\n              <Grid item xs container direction=\"column\" spacing={2}>\r\n                <Grid item xs>\r\n                  <Typography gutterBottom variant=\"subtitle1\">\r\n                    {producto.name}\r\n                  </Typography>\r\n                \r\n                <Typography variant=\"subtitle1\" className=\"hola\"> ${producto.cost}</Typography>\r\n              \r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    {producto.descripcion}\r\n                  </Typography>\r\n                  \r\n                </Grid>\r\n                <Grid item  className={classes.botones}>\r\n                  <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                    \r\n                  <Button \r\n                    onClick={() => addToCart(producto)}\r\n                    className={classes.agregar} \r\n                    variant=\"outlined\"\r\n                    >\r\n                    Agregar\r\n                  </Button>\r\n                  </Typography>\r\n\r\n                  <Button \r\n                    onClick={handleClickOpen}\r\n                    className={classes.verMas}\r\n                    variant=\"outlined\"  \r\n                  >\r\n                    Ver Foto\r\n                  </Button>\r\n                  <Dialog\r\n                    fullScreen={fullScreen}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"responsive-dialog-title\"\r\n                  >\r\n                    <DialogTitle id=\"responsive-dialog-title\">{\"Foto\"}</DialogTitle>\r\n                    <DialogContent>\r\n                      <DialogContentText>\r\n                      <Typography gutterBottom variant=\"subtitle1\">\r\n                        {producto.index}\r\n                      </Typography>\r\n                       <img \r\n                        className= {classes.img} \r\n                        alt= {producto.name} \r\n                        src= {producto.img} \r\n                      /> \r\n                      </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Cerrar\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n\r\n                </Grid>\r\n              </Grid>\r\n              \r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      \r\n        </div> \r\n      ))}\r\n      \r\n      </div>\r\n     \r\n      </div>\r\n  );\r\n}","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\Cart.js",["79","80","81","82","83","84","85","86"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport { Button } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DialogoForm from './DialogoForm'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  root2: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  productos: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 1fr',\r\n  },\r\n  producto: {\r\n    padding: '40px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    marginLeft: '3.5rem',\r\n    maxWidth: 400,\r\n  },\r\n  \r\n  agregar: {\r\n    backgroundColor: '#FFD900',\r\n    '&:hover': {\r\n      backgroundColor: '#D8B800',\r\n    }\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  \r\n  },\r\n  colorAcor:{\r\n    justifyContent: 'center',\r\n    backgroundColor: '#bee5d3',\r\n    color: 'black',\r\n    border: '0.5px solid #eb5e30',\r\n    width:'40%'\r\n  },\r\n  total: {\r\n    marginTop: '1rem',\r\n    marginBottom: '1rem',\r\n    marginLeft:'8rem',\r\n    // marginLeft: '30rem',\r\n    // marginRight: '30rem',\r\n    backgroundColor: '#333',\r\n    color: 'white',\r\n    borderRadius: '10px',\r\n    padding: '0.5rem',\r\n    border: '1.5px solid #eb5e30',\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  cantidad: {\r\n    marginRight: '1rem',\r\n    color: 'whiteSmoke',\r\n    backgroundColor: '#EB5D2F',\r\n    '&:hover': {\r\n      backgroundColor: '#C4380A',\r\n    }\r\n  },\r\n  \r\n}))\r\n \r\nexport default function Cart({ cart, setCart }) {\r\n  const classes = useStyles(); \r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getTotalSum = () => {\r\n    return cart.reduce(\r\n      (sum, { cost, quantity }) => sum + cost * quantity,\r\n      0\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  const setQuantity = (product, amount) => {\r\n    const newCart = [...cart];\r\n    newCart.find(\r\n      (item) => item.name === product.name\r\n    ).quantity = amount;\r\n    setCart(newCart);\r\n  };\r\n\r\n  const removeFromCart = (productToRemove) => {\r\n    setCart(\r\n      cart.filter((product) => product !== productToRemove)\r\n    );\r\n  };\r\n   const productsWhatsapp = cart.map(\r\n    (product) =>\r\n          \"Producto:    \"+ product.name + \",\"+\r\n          \"Cantidad: \"+ product.quantity +\",\"+\r\n           \"Costo por unidad: \" + \"$\" + product.cost+\"\"+\"\"\r\n  );\r\n  \r\n  console.table(productsWhatsapp);\r\n  \r\nconsole.groupEnd()\r\n\r\n  function getLinkWhastapp() {\r\n    var url =\r\n      \"https://api.whatsapp.com/send?phone=\" +\r\n      \"541150350078\" +\r\n      \"&text=\" +\r\n      encodeURIComponent(\"Mi pedido es: \") +\r\n      \"%0a%0a\" +\r\n      \r\n      productsWhatsapp +\"//\" +\r\n      \"%0a\" +\r\n       \r\n      encodeURIComponent(\"El total es: $\" + getTotalSum());\r\n\r\n    return window.open(url);\r\n  }\r\n\r\n  return (\r\n    \r\n      <div class=\"flex-container\">\r\n      \r\n\r\n       <div class=\"flex-item-left\" >\r\n       <div className={classes.header}>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={() => getLinkWhastapp()} className={classes.total}>\r\n      Confirmar: <WhatsAppIcon fontSize=\"small\"/>\r\n\r\n      </Button>\r\n      <Button variant=\"outlined\" color=\"primary\"  className={classes.total}>\r\n      Total: ${getTotalSum()}\r\n\r\n      </Button>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={clearCart} className={classes.total}>\r\n      Vaciar carrito <DeleteIcon fontSize=\"small\"/>\r\n\r\n      </Button>\r\n      <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} className={classes.total}>\r\n        Completa tus datos\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={handleClose} >\r\n        <DialogTitle id=\"form-dialog-title\">Completa </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Por favor completa los datos\r\n          </DialogContentText>\r\n          <DialogoForm/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n    \r\n      {/* <Accordion className={classes.colorAcor} container justify=\"center\" >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\" aling=\"center\"\r\n        >\r\n          <Typography className={classes.heading}>Complete sus datos</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        \r\n      \r\n       <DialogoForm/>\r\n          \r\n        </AccordionDetails>\r\n      </Accordion> */}\r\n      </div>\r\n    </div>\r\n    <div className={classes.productos}>\r\n      {cart.map((producto, index) => (\r\n        <div className={classes.producto} key={index}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n            <img \r\n              className= {classes.img} \r\n              alt= {producto.name} \r\n              src= {producto.image} \r\n            />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  {producto.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  {producto.descripcion}\r\n                </Typography>\r\n                \r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                <Button \r\n                  onClick={() => removeFromCart(producto)}\r\n                  className={classes.agregar} \r\n                  variant=\"outlined\"\r\n                  >\r\n                  Eliminar\r\n                </Button>\r\n                </Typography>\r\n\r\n                <Grid item>\r\n                \r\n                <Button id=\"boton\"\r\n                className={classes.agregar}\r\n                    \r\n                  variant=\"outlined\"\r\n                  >\r\n                    <input type=\"number\" \r\n                   value={producto.quantity}\r\n              onChange={(e) =>\r\n                setQuantity(\r\n                  producto,\r\n                  parseInt(e.target.value)\r\n                )\r\n              }\r\n            />\r\n                  Cantidad\r\n                </Button>\r\n              \r\n                </Grid>\r\n\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"subtitle1\">${producto.cost}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      </div> \r\n    ))}\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n  );\r\n}\r\n","C:\\Users\\escob\\OneDrive\\Escritorio\\app_\\src\\components\\DialogoForm.js",["87","88","89","90","91"],"import React, {useState} from 'react';\r\nimport {makeStyles, TextField, Grid, Button, Typography} from '@material-ui/core';\r\nimport {db} from '../firebase'\r\nimport {storage} from '../firebase'\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerForm: {\r\n        display:'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    grid: {\r\n        display:'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        // backgroundColor: 'pink',\r\n        marginTop: '20px',\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')] : {\r\n            width: '60%',\r\n        }\r\n    },\r\n    containerButtons: {\r\n        height: '15px',\r\n        backgroundColor: 'blue'\r\n    },\r\n    inputFile:{\r\n        padding: '10px',\r\n        margin: '10px',\r\n        backgroundColor:'black',\r\n    },\r\n    tituloForm: {\r\n        textAlign: 'center'\r\n    },\r\n    containerPaso2: {\r\n        display: 'none',\r\n        marginTop: '20px',\r\n        width: '100%', \r\n        [theme.breakpoints.up('sm')] : {\r\n            width: '60%',\r\n        }\r\n    \r\n    },\r\n    \r\n    containerSubmit: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: '20px'\r\n    },\r\n   \r\n    \r\n    buttonSig: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst DialogoForm = () => {\r\n    const classes = useStyles();\r\n    const [nombre, setNombre] = useState('');\r\n    const [apellido, setApellido] = useState('');\r\n    const [direccion, setdireccion] = useState('');\r\n    const [comentarios, setComentarios] = useState('')\r\n    const [mostrarSnackbar, setMostrarSnackbar] = useState(false)\r\n    const [fechaDeEntrega, setFechaDeEntrega] = useState(\"\")\r\n    const [provincia, setProvincia] = useState('')\r\n    const [zona, setZona] = useState('')\r\n    const [emailUsuario, setEmailUsuario] = useState('')\r\n\r\n    \r\n\r\n    const handleChangeNombre = (e) => {\r\n        setNombre(e.target.value)\r\n    }\r\n\r\n    const handleChangeApellido = (e) => {\r\n        setApellido(e.target.value)\r\n    }\r\n\r\n    const handleChangedireccion = (e) => {\r\n        setdireccion(e.target.value)\r\n    }\r\n\r\n    \r\n    const handleChangeComentarios = (e) => {\r\n        setComentarios(e.target.value)\r\n        \r\n    }\r\n    \r\n\r\n    const handleFechaDeEntrega = (e) => {\r\n        setFechaDeEntrega(e.target.value)\r\n    }\r\n\r\n    \r\n    \r\n    const handleZona = (e) => {\r\n        setZona(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    const nuevoRegistro = async (e) => {\r\n        e.preventDefault();\r\n        \r\n            const date = new Date();\r\n            const numeroDia = date.getDate();\r\n            const mes = date.getMonth();\r\n            const año = date.getFullYear();\r\n            const hora = date.getHours();\r\n            const minuto = date.getMinutes();\r\n            const segundo = date.getSeconds();\r\n            const meses = [\r\n                \"Enero\", \"Febrero\", \"Marzo\",\r\n                \"Abril\", \"Mayo\", \"Junio\", \"Julio\",\r\n                \"Agosto\", \"Septiembre\", \"Octubre\",\r\n                \"Noviembre\", \"Diciembre\"\r\n            ]\r\n            const fechaRegistro = `${numeroDia} de ${meses[mes]} del ${año} a las ${hora}:${minuto}:${segundo}`\r\n        \r\n            db.collection('datosUsuario').add({\r\n                emailUsuario: emailUsuario,\r\n                fechaRegistro: fechaRegistro,\r\n                nombre: nombre,\r\n                apellido: apellido,\r\n                direccion: direccion,\r\n                comentarios: comentarios,\r\n                fechaDeEntrega: fechaDeEntrega,\r\n                provincia: provincia,\r\n                zona: zona\r\n            })\r\n            alert('Datos cargados correctamente');\r\n            console.log(\"Datos cargados con éxito.\");\r\n            setMostrarSnackbar(true)\r\n           \r\n        setTimeout(function() {\r\n            window.location.replace(\"/confirmarCompra\");\r\n        }, 2000)\r\n    }\r\n\r\n    const Snackbar = () => {\r\n        (mostrarSnackbar) ?\r\n        <div>\r\n            datos cargados\r\n        </div> \r\n        : \r\n        <></>\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <div class=\"flex-container-form\">\r\n        <form onSubmit={nuevoRegistro}  className={classes.containerForm}>\r\n\r\n            <Grid container spacing={3} className={classes.grid} id=\"paso1\">\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                    name=\"nombre\" \r\n                    type=\"text\"  \r\n                    label=\"Nombre/s\"\r\n                    onChange={handleChangeNombre}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    autoComplete=\"fname\"\r\n                    required\r\n                    autoFocus\r\n                    />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                    name=\"apellido\" \r\n                    type=\"text\"  \r\n                    label=\"Apellido/s\"\r\n                    onChange={handleChangeApellido}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    autoComplete=\"lname\"\r\n                    required\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                    name=\"direccion\" \r\n                    type=\"text\"  \r\n                    onChange={handleChangedireccion}\r\n                    label=\"Dirección\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    autoComplete=\"lname\"           \r\n                    />\r\n                </Grid>\r\n\r\n        \r\n\r\n                <Grid item xs={12} >\r\n                    <TextField\r\n                    name=\"comentarios\"\r\n                    type=\"text\"\r\n                    label=\"Comentarios\"\r\n                    onChange={handleChangeComentarios}\r\n                    placeholder=\"Si desea agregar deje su comentario\"\r\n                    required\r\n                    id=\"outlined-multiline-static\"\r\n                    multiline\r\n                    rows={6}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <TextField\r\n                        id=\"date\"\r\n                        label=\"Fecha de entrega\"\r\n                        type=\"date\"\r\n                        defaultValue=\"2017-05-24\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        className={classes.textField}\r\n                        onChange={handleFechaDeEntrega}\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <TextField\r\n                    name=\"zona\" \r\n                    type=\"text\"\r\n                    onChange={handleZona}\r\n                    label=\"Zona\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    autoComplete=\"lname\"   \r\n                    required                \r\n                    />\r\n                </Grid>\r\n                <Grid >\r\n                    <Grid item xs={12} >\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Añadir registro</Button>\r\n                        \r\n                    </Grid>\r\n                    {Snackbar()}\r\n                </Grid>\r\n                \r\n            </Grid>   \r\n\r\n           \r\n         \r\n        </form>\r\n        </div>\r\n        \r\n     );\r\n}\r\n\r\nexport default DialogoForm;",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":22,"column":1,"nodeType":"102","endLine":22,"endColumn":34},{"ruleId":"96","severity":1,"message":"103","line":7,"column":10,"nodeType":"98","messageId":"99","endLine":7,"endColumn":16},{"ruleId":"96","severity":1,"message":"104","line":7,"column":18,"nodeType":"98","messageId":"99","endLine":7,"endColumn":29},{"ruleId":"96","severity":1,"message":"105","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":16},{"ruleId":"96","severity":1,"message":"106","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":18},{"ruleId":"96","severity":1,"message":"107","line":10,"column":10,"nodeType":"98","messageId":"99","endLine":10,"endColumn":14},{"ruleId":"96","severity":1,"message":"108","line":13,"column":8,"nodeType":"98","messageId":"99","endLine":13,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":100,"column":3,"nodeType":"111","messageId":"112","endLine":100,"endColumn":7},{"ruleId":"96","severity":1,"message":"113","line":129,"column":9,"nodeType":"98","messageId":"99","endLine":129,"endColumn":23},{"ruleId":"96","severity":1,"message":"114","line":131,"column":20,"nodeType":"98","messageId":"99","endLine":131,"endColumn":31},{"ruleId":"96","severity":1,"message":"115","line":133,"column":9,"nodeType":"98","messageId":"99","endLine":133,"endColumn":30},{"ruleId":"96","severity":1,"message":"116","line":15,"column":8,"nodeType":"98","messageId":"99","endLine":15,"endColumn":11},{"ruleId":"109","severity":1,"message":"117","line":20,"column":5,"nodeType":"111","messageId":"112","endLine":20,"endColumn":12},{"ruleId":"96","severity":1,"message":"118","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":18},{"ruleId":"96","severity":1,"message":"119","line":11,"column":8,"nodeType":"98","messageId":"99","endLine":11,"endColumn":17},{"ruleId":"96","severity":1,"message":"120","line":12,"column":8,"nodeType":"98","messageId":"99","endLine":12,"endColumn":17},{"ruleId":"96","severity":1,"message":"121","line":13,"column":8,"nodeType":"98","messageId":"99","endLine":13,"endColumn":24},{"ruleId":"96","severity":1,"message":"122","line":14,"column":8,"nodeType":"98","messageId":"99","endLine":14,"endColumn":24},{"ruleId":"96","severity":1,"message":"123","line":15,"column":8,"nodeType":"98","messageId":"99","endLine":15,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":142,"column":33,"nodeType":"126","messageId":"127","endLine":142,"endColumn":34},{"ruleId":"124","severity":1,"message":"125","line":142,"column":56,"nodeType":"126","messageId":"127","endLine":142,"endColumn":57},{"ruleId":"96","severity":1,"message":"106","line":2,"column":46,"nodeType":"98","messageId":"99","endLine":2,"endColumn":56},{"ruleId":"96","severity":1,"message":"128","line":4,"column":9,"nodeType":"98","messageId":"99","endLine":4,"endColumn":16},{"ruleId":"96","severity":1,"message":"129","line":6,"column":8,"nodeType":"98","messageId":"99","endLine":6,"endColumn":13},{"ruleId":"96","severity":1,"message":"130","line":70,"column":23,"nodeType":"98","messageId":"99","endLine":70,"endColumn":35},{"ruleId":"96","severity":1,"message":"131","line":72,"column":26,"nodeType":"98","messageId":"99","endLine":72,"endColumn":41},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'MenuIcon' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'Paper' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","'addToCartPromo' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'getProductsInCategory' is assigned a value but never used.","'Box' is defined but never used.","Duplicate key 'display'.","'IconButton' is defined but never used.","'TextField' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'storage' is defined but never used.","'Alert' is defined but never used.","'setProvincia' is assigned a value but never used.","'setEmailUsuario' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]